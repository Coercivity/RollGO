// <auto-generated />
using System;
using Infrastructure;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Infrastructure.Migrations
{
    [DbContext(typeof(UserDbContext))]
    partial class UserDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.HasPostgresExtension(modelBuilder, "uuid-ossp");
            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Domain.Entities.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("Id")
                        .HasDefaultValueSql("uuid_generate_v4()");

                    b.Property<DateTime>("CreatedDateTime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("CreatedDateTime");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Icon")
                        .HasColumnType("text");

                    b.Property<string>("Password")
                        .HasColumnType("text");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("varchar");

                    b.HasKey("Id");

                    b.ToTable("User", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("7d9a0298-c78b-4695-ba85-328da77dbe49"),
                            CreatedDateTime = new DateTime(2023, 12, 23, 16, 18, 33, 102, DateTimeKind.Utc).AddTicks(4458),
                            Email = "slavoyar@hotmail.com",
                            Password = "$2a$11$xjNnZHNqvIKURLF3ldakbeYlhxbXEABXQzQnKDExYmfiELqFM3uzC",
                            Username = "slavoyar"
                        },
                        new
                        {
                            Id = new Guid("8f56b3cb-cd9c-4fe0-8634-41c243b077e1"),
                            CreatedDateTime = new DateTime(2023, 12, 23, 16, 18, 33, 102, DateTimeKind.Utc).AddTicks(4497),
                            Email = "serpens@rollgo.com",
                            Password = "$2a$11$xjNnZHNqvIKURLF3ldakbeYlhxbXEABXQzQnKDExYmfiELqFM3uzC",
                            Username = "outflow"
                        },
                        new
                        {
                            Id = new Guid("e643a90e-1e36-42e9-835c-f67224ac9266"),
                            CreatedDateTime = new DateTime(2023, 12, 23, 16, 18, 33, 102, DateTimeKind.Utc).AddTicks(4499),
                            Email = "serpens@hotmail.com",
                            Password = "$2a$11$xjNnZHNqvIKURLF3ldakbeYlhxbXEABXQzQnKDExYmfiELqFM3uzC",
                            Username = "serpens"
                        });
                });

            modelBuilder.Entity("Domain.Entities.UserSession", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("Id")
                        .HasDefaultValueSql("uuid_generate_v4()");

                    b.Property<DateTime>("CreatedDateTime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("CreatedDateTime");

                    b.Property<string>("Platform")
                        .HasColumnType("text");

                    b.Property<string>("RefreshTokenHash")
                        .IsRequired()
                        .HasColumnType("varchar");

                    b.Property<string>("UserAgent")
                        .HasColumnType("text");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("UserSession", (string)null);
                });

            modelBuilder.Entity("Domain.Entities.UserSession", b =>
                {
                    b.HasOne("Domain.Entities.User", "User")
                        .WithMany("UserSessions")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Domain.Entities.User", b =>
                {
                    b.Navigation("UserSessions");
                });
#pragma warning restore 612, 618
        }
    }
}
